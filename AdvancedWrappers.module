<?php

module_load_include('inc', 'AdvancedWrappers', 'checkboxesDivLabel');
module_load_include('inc', 'AdvancedWrappers', 'radiosCredit');
module_load_include('inc', 'AdvancedWrappers', 'radiosDivLabel');
module_load_include('inc', 'AdvancedWrappers', 'tableradios');

function AdvancedWrappers_theme() {//from commons.inc function drupal_common_theme
  $data['tableradios'] = array(
    'render element' => 'element',
  );
  $data['radiosDivLabel'] = array(
    'render element' => 'element',
  );
  $data['radioCredit'] = array(
    'render element' => 'element',
  );
  $data['radiosCredit'] = array(
    'render element' => 'element',
  );
  $data['checkboxesDivLabel'] = array(
    'render element' => 'element',
  );
  return $data;
}

function AdvancedWrappers_element_info(){//from system.module function system_element_info
  $types['tableradios'] = array(
    '#input' => TRUE,
    '#multiple' => TRUE,
    '#process' => array('form_process_tableradios'),
    '#options' => array(),
    '#empty' => '',
    '#theme' => 'tableradios',
    '#theme_wrappers' => array('form_element'),
    '#pre_render' => array('drupal_pre_render_markup'),
  );
  $types['radiosDivLabel'] = array(
    '#input' => TRUE,
    '#process' => array('form_process_radiosDivLabel'),
    '#theme_wrappers' => array('radiosDivLabel'),
    '#pre_render' => array('form_pre_render_conditional_form_element'),
  );
  $types['radioCredit'] = array(
    '#input' => TRUE,
    '#default_value' => NULL,
    '#process' => array('ajax_process_form'),
    '#theme' => 'radioCredit',
    //'#theme_wrappers' => array('form_element'),
    '#title_display' => 'after',
  );
  $types['radiosCredit'] = array(
    '#input' => TRUE,
    '#process' => array('form_process_radiosCredit'),
    '#theme_wrappers' => array('radiosCredit'),
    '#pre_render' => array('form_pre_render_conditional_form_element'),
  );
  $types['checkboxesDivLabel'] = array(
    '#input' => TRUE,
    '#process' => array('form_process_checkboxesDivLabel'),
    '#theme_wrappers' => array('checkboxesDivLabel'),
    '#pre_render' => array('form_pre_render_conditional_form_element'),
  );
  return $types;
}

function AdvancedWrappers_form_validate(&$elements, &$form_state, $form_id = NULL) {
  $t = get_t();

  foreach (element_children($elements) as $key) {
    if (isset($elements[$key]) && $elements[$key]) {
      _form_validate($elements[$key], $form_state);
    }
  }

  if (!isset($elements['#validated']) || !$elements['#validated']) {
    if (isset($elements['#needs_validation'])) {
      if (isset($elements['#maxlength']) && drupal_strlen($elements['#value']) > $elements['#maxlength']) {
        form_error($elements, $t('!name cannot be longer than %max characters but is currently %length characters long.', array('!name' => empty($elements['#title']) ? $elements['#parents'][0] : $elements['#title'], '%max' => $elements['#maxlength'], '%length' => drupal_strlen($elements['#value']))));
      }

      if (isset($elements['#options']) && isset($elements['#value'])) {
        if ($elements['#type'] == 'select') {
          $options = form_options_flatten($elements['#options']);
        }
        else {
          $options = $elements['#options'];
        }
        if (is_array($elements['#value'])) {
          $value = in_array($elements['#type'], array('checkboxes', 'tableselect')) ? array_keys($elements['#value']) : $elements['#value'];
          foreach ($value as $v) {
            if (!isset($options[$v])) {
              form_error($elements, $t('An illegal choice has been detected. Please contact the site administrator.'));
              watchdog('form', 'Illegal choice %choice in !name element.', array('%choice' => $v, '!name' => empty($elements['#title']) ? $elements['#parents'][0] : $elements['#title']), WATCHDOG_ERROR);
            }
          }
        }
        elseif ($elements['#type'] == 'select' && !$elements['#multiple'] && $elements['#required'] && !isset($elements['#default_value']) && $elements['#value'] === $elements['#empty_value']) {
          $elements['#value'] = NULL;
          form_set_value($elements, NULL, $form_state);
        }
        elseif (!isset($options[$elements['#value']])) {
          form_error($elements, $t('An illegal choice has been detected. Please contact the site administrator.'));
          watchdog('form', 'Illegal choice %choice in %name element.', array('%choice' => $elements['#value'], '%name' => empty($elements['#title']) ? $elements['#parents'][0] : $elements['#title']), WATCHDOG_ERROR);
        }
      }
    }

    if (isset($form_state['triggering_element']['#limit_validation_errors']) && ($form_state['triggering_element']['#limit_validation_errors'] !== FALSE) && !($form_state['submitted'] && !isset($form_state['triggering_element']['#submit']))) {
      form_set_error(NULL, '', $form_state['triggering_element']['#limit_validation_errors']);
    }
    elseif (isset($form_state['triggering_element']) && !isset($form_state['triggering_element']['#limit_validation_errors']) && !$form_state['submitted']) {
      form_set_error(NULL, '', array());
    }
    else {
      drupal_static_reset('form_set_error:limit_validation_errors');
    }

    if (isset($elements['#needs_validation']) && $elements['#required']) {
      $is_empty_multiple = (!count($elements['#value']));
      $is_empty_string = (is_string($elements['#value']) && drupal_strlen(trim($elements['#value'])) == 0);
      $is_empty_value = ($elements['#value'] === 0);
      if ($is_empty_multiple || $is_empty_string || $is_empty_value) {
        if (isset($elements['#title'])) {
          form_error($elements, $t('!name field is required.', array('!name' => $elements['#title'])));
        }
        else {
          form_error($elements);
        }
      }
    }

    if (isset($form_id)) {
      form_execute_handlers('validate', $elements, $form_state);
    }
    elseif (isset($elements['#element_validate'])) {
      foreach ($elements['#element_validate'] as $function) {
        $function($elements, $form_state, $form_state['complete form']);
      }
    }
    $elements['#validated'] = TRUE;
  }

  drupal_static_reset('form_set_error:limit_validation_errors');
}

function theme_radioCredit($variables) { //from form.inc
  $element = $variables['element'];
  $element['#attributes']['type'] = 'radio';
  element_set_attributes($element, array('id', 'name', '#return_value' => 'value'));

  if (isset($element['#return_value']) && $element['#value'] !== FALSE && $element['#value'] == $element['#return_value']) {
    $element['#attributes']['checked'] = 'checked';
  }
  _form_set_class($element, array('radio'));

  return '<input' . drupal_attributes($element['#attributes']) . ' />
          <label for="'.$element['#id'].'" name="rely"></label>';
  /*return '
    <div class="input-group">
      <span class="input-group-addon">
        <input '. drupal_attributes($element['#attributes']) .'/>
        <label for="r-radio1" name="rely"></label>
      </span><input readonly="" placeholder="500 рублей" pattern="500" id="readonly" class="form-control">
    </div>';*/
}
